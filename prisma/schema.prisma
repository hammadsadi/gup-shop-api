// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  Int
}

model User{
  id String @id @default(uuid())
  email String @unique
  name String
  username String? @unique
  bio String?
  phone String
  password String
  photo String?
  isAccountActive Boolean @default(false)
  ActiveToken String?
  otpCode Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sentChats      Chats[]  @relation("SentChats")
  receivedChats  Chats[]  @relation("ReceivedChats")

}


model Chats{
  id String @id @default(uuid())
  senderId String
  receiverId String
  messageId String @unique
  theme String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean @default(false)
  status ChatStatus @default(sent)
  sender         User     @relation("SentChats", fields: [senderId], references: [id])
  receiver       User     @relation("ReceivedChats", fields: [receiverId], references: [id])
  message    Messages   @relation("MessageOnChat", fields: [messageId], references: [id])
}

enum ChatStatus {
  sent
  seen
  delivered

}

model Messages{
  id String @id @default(uuid())
  text String?
  photo String?
  emoji String? 
  link String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chat      Chats?   @relation("MessageOnChat")
  }